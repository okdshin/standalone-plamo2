name: Build API Server with VLLM branch add-plamo2

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # 手動でワークフローを実行できるようにします

jobs:
  build:
    runs-on: windows-latest

    steps:
    # リポジトリのチェックアウト
    - name: Checkout repository
      uses: actions/checkout@v3
    
    # Pythonのセットアップ
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'  # 必要なPythonバージョンを指定

    # CUDA Toolkit 12.6 コンポーネントのインストール
    - name: Install CUDA Toolkit 12.6 Components
      shell: powershell
      run: |
        # 必要なツールのインストール
        mkdir -p "C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.6"
        choco install unzip -y
        
        # CUDA コンポーネントのダウンロード
        $cudaComponents = @(
          "cuda_cudart-windows-x86_64-12.6.77-archive.zip",
          "cuda_nvcc-windows-x86_64-12.6.77-archive.zip",
          "cuda_nvrtc-windows-x86_64-12.6.77-archive.zip",
          "libcublas-windows-x86_64-12.6.77-archive.zip",
          "cuda_nvtx-windows-x86_64-12.6.77-archive.zip",
          "cuda_profiler_api-windows-x86_64-12.6.77-archive.zip",
          "visual_studio_integration-windows-x86_64-12.6.77-archive.zip",
          "cuda_nvprof-windows-x86_64-12.6.77-archive.zip",
          "cuda_cccl-windows-x86_64-12.6.77-archive.zip"
        )
        
        foreach ($component in $cudaComponents) {
          $componentName = $component.Split('-')[0]
          $componentPlatform = $component.Split('-')[1]
          $url = "https://developer.download.nvidia.com/compute/cuda/redist/$componentName/$componentPlatform-x86_64/$component"
          Write-Host "Downloading $component from $url..."
          Invoke-WebRequest -Uri $url -OutFile $component
        }
        
        # 各ZIPを解凍して統合する
        $cudaDir = "C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.6"
        $tempDir = "C:\cuda_temp"
        mkdir -p $tempDir
        
        foreach ($component in $cudaComponents) {
          $extractDir = "$tempDir\$($component.Replace('.zip', ''))"
          Write-Host "Extracting $component to $extractDir..."
          Expand-Archive -Path $component -DestinationPath $extractDir -Force
          
          Write-Host "Copying files from $extractDir to $cudaDir..."
          xcopy "$extractDir\*" "$cudaDir" /E /I /H /Y
        }
        
        # 環境変数の設定
        echo "C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.6\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.6\libnvvp" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "CUDA_PATH=C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.6" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8
        echo "CUDA_PATH_V12_6=C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.6" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8
        
        # CUDA環境をチェック
        Write-Host "Checking CUDA installation..."
        Get-ChildItem "C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.6\bin" -ErrorAction SilentlyContinue
        
        # 一時ディレクトリの削除
        Remove-Item -Path $tempDir -Recurse -Force -ErrorAction SilentlyContinue

    # インストール確認
    - name: Verify CUDA installation
      shell: cmd
      run: |
        echo Current PATH:
        echo %PATH%
        
        echo Checking CUDA_PATH:
        echo %CUDA_PATH%
        
        echo Listing CUDA bin directory:
        dir "%CUDA_PATH%\bin"
        
        echo Trying to run nvcc:
        "%CUDA_PATH%\bin\nvcc.exe" --version || echo NVCC failed but continuing anyway

    # VLLMリポジトリのクローンと特定ブランチへの切り替え
    - name: Clone VLLM repository and checkout add-plamo2 branch
      shell: cmd
      run: |
        git clone https://github.com/pfnet/vllm.git
        cd vllm
        git fetch --all
        git checkout add-plamo2
        echo VLLM repository cloned and switched to add-plamo2 branch
        git branch --show-current
        cd ..
    
    # Nuitkaと必要な依存関係のインストール
    - name: Install Nuitka and dependencies
      shell: cmd
      run: |
        python -m pip install --upgrade pip
        pip install nuitka
        pip install pefile zstandard ordered-set
        pip install pywin32
        
    # CUDA対応のPytorch及びVLLMの依存関係をインストール（特定のブランチから）
    - name: Install PyTorch with CUDA and VLLM from add-plamo2 branch
      shell: cmd
      run: |
        pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu126
        cd vllm
        pip install -e .
        cd ..
    
    # exeのビルド - onefileオプションを使用し、CUDA対応
    - name: Build API Server as onefile with Nuitka
      shell: cmd
      run: |
        :: onefileとCUDA対応でビルド
        python -m nuitka --onefile ^
          --follow-imports ^
          --include-package=vllm ^
          --include-package=torch ^
          --include-package-data=vllm ^
          --include-package-data=torch ^
          --include-data-dir="%CUDA_PATH%\bin=cuda" ^
          --include-plugin-directory=vllm ^
          --assume-yes-for-downloads ^
          --disable-console=no ^
          --windows-company-name="dummy" ^
          --windows-product-name="VLLM API Server (add-plamo2)" ^
          --windows-file-version="1.0.0.0" ^
          --windows-product-version="1.0.0.0" ^
          --windows-file-description="VLLM API Server using add-plamo2 branch" ^
          --mingw64 ^
          --low-memory ^
          --jobs=4 ^
          api_server.py
        
        :: ビルド成果物の確認
        dir *.exe
    
    # 成果物のアップロード
    - name: Upload executable
      uses: actions/upload-artifact@v4
      with:
        name: api-server-onefile-add-plamo2
        path: api_server.exe
